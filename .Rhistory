ylim(-6.4,6.4)
ggraph(layout) +
geom_edge_diagonal(
aes(edge_color = edge$Regulate, show.legend = TRUE),
edge_width =0.35,
alpha =0.35
) +
geom_node_point(
aes(color = type,show.legend = TRUE),
alpha=0.15,
size = 1/(node$level+1)*60+5)+
scale_edge_color_manual(values = edge_Regulate_color,
guide = guide_legend(title = "Connection",
title.theme = element_text(
size = 18,
face="italic",
colour = "grey1"),
label.theme = element_text(
size = 18,
colour = "grey1",
face="italic")))+#根据top_language_colors确定颜色
scale_color_manual(values = node_type_color,
guide = guide_legend(title = "type",
title.theme = element_text(
size = 18,
face="italic",
colour = "grey1"),
label.theme = element_text(
size = 18,
colour = "grey1",
face="italic")))+#根据top_language_colors确定颜色) +#根据top_language_colors确定颜色
scale_size_area(max_size = 2) +#缩放半径
#外圈标签
geom_node_text(
aes(
x = 1.0175 * x,#文字的横坐标
y = 1.0175 * y,#文字的纵坐标
color= type,
label = name,#文字的内容
angle = -((-node_angle(x, y) + 90) %% 180) + 90,#%%表示整除后返回余数,node_angle根据横纵坐标计算角度
filter =(level==4) #为外圈添加标签
),
size = 4, hjust = 'outward', family = 'Oswald'
) +
#原点标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
filter = (level==0)#为编程语言添加文字标签
),
size = 4, hjust = 0,vjust=0, family = 'italic', angle=0
) +
#内圈标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
angle = -((-node_angle(x, y) + 90) %% 181) + 90,
filter = (level==1)#为编程语言添加文字标签
),
size = 4, hjust = 'outward', family = 'italic', vjust=0
) +
#中圈标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
angle = -((-node_angle(x, y) + 90) %% 180) + 90,
filter = (level==2)#为编程语言添加文字标签
),
size = 4, hjust = 'outward', family="italic"
) +
#上层标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
filter = (level==3)#为编程语言添加文字标签
),
size = 4, hjust = 0, family = 'Oswald',vjust=0,
angle = 25
) +
#下层标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
filter = (level==5)#为编程语言添加文字标签
),
size = 4, hjust = 0.5, family = 'Oswald', vjust =0.9,
angle = 25
) +
coord_fixed() +#图形伸缩变换
labs(
title = '',
subtitle = '',
caption = 'Early life pesticide exposome, Gut microbiome, and metabolism'
) +#添加标题、副标题、说明文字
theme(
legend.title.align = 0,#legend左对齐
legend.text.align =0,#legend text左对齐
legend.spacing.x = unit(0.1,"cm"),#图例各个元素距离
legend.spacing.y = unit(0.1,"cm"),
panel.background = element_blank(),#delete background.
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank()
)+
theme(
text = element_text(family = 'Oswald'),
legend.position = c(1,0.5),#标签位置
plot.title = element_text(
face = 'bold', hjust = 0.5,vjust = 1, size = 10, margin = margin(t = 45, b = 20),color = 'grey2'
),#title设定
plot.subtitle = element_text(
face = 'plain', hjust = 0.5, size = 13, margin = margin(t = 5, b = 3)),#subtitle设定
plot.caption = element_text(
face = 'plain', color = 'gray2', size = 18, hjust = 0.5,
margin = margin(b = 20)
)#caption说明文字设定
)+
xlim(-6,6)+
ylim(-6.4,6.4)
ggraph(layout) +
geom_edge_diagonal(
aes(edge_color = edge$Regulate, show.legend = TRUE),
edge_width =0.35,
alpha =0.35
) +
geom_node_point(
aes(color = type,show.legend = TRUE),
alpha=0.15,
size = 1/(node$level+1)*60+5)+
scale_edge_color_manual(values = edge_Regulate_color,
guide = guide_legend(title = "Connection",
title.theme = element_text(
size = 18,
face="italic",
colour = "grey1"),
label.theme = element_text(
size = 18,
colour = "grey1",
face="italic")))+#根据top_language_colors确定颜色
scale_color_manual(values = node_type_color,
guide = guide_legend(title = "type",
title.theme = element_text(
size = 18,
face="italic",
colour = "grey1"),
label.theme = element_text(
size = 18,
colour = "grey1",
face="italic")))+#根据top_language_colors确定颜色) +#根据top_language_colors确定颜色
scale_size_area(max_size = 2) +#缩放半径
#外圈标签
geom_node_text(
aes(
x = 1.0175 * x,#文字的横坐标
y = 1.0175 * y,#文字的纵坐标
color= type,
label = name,#文字的内容
angle = -((-node_angle(x, y) + 90) %% 180) + 90,#%%表示整除后返回余数,node_angle根据横纵坐标计算角度
filter =(level==4) #为外圈添加标签
),
size = 4, hjust = 'outward', family = 'Oswald'
) +
#原点标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
filter = (level==0)#为编程语言添加文字标签
),
size = 4, hjust = 0,vjust=0, family = 'italic', angle=0
) +
#内圈标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
angle = -((-node_angle(x, y) + 90) %% 181) + 90,
filter = (level==1)#为编程语言添加文字标签
),
size = 4, hjust = 'outward', family = 'italic', vjust=0
) +
#中圈标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
angle = -((-node_angle(x, y) + 90) %% 180) + 90,
filter = (level==2)#为编程语言添加文字标签
),
size = 4, hjust = 'outward', fontface="italic"
) +
#上层标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
filter = (level==3)#为编程语言添加文字标签
),
size = 4, hjust = 0, family = 'Oswald',vjust=0,
angle = 25
) +
#下层标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
filter = (level==5)#为编程语言添加文字标签
),
size = 4, hjust = 0.5, family = 'Oswald', vjust =0.9,
angle = 25
) +
coord_fixed() +#图形伸缩变换
labs(
title = '',
subtitle = '',
caption = 'Early life pesticide exposome, Gut microbiome, and metabolism'
) +#添加标题、副标题、说明文字
theme(
legend.title.align = 0,#legend左对齐
legend.text.align =0,#legend text左对齐
legend.spacing.x = unit(0.1,"cm"),#图例各个元素距离
legend.spacing.y = unit(0.1,"cm"),
panel.background = element_blank(),#delete background.
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank()
)+
theme(
text = element_text(family = 'Oswald'),
legend.position = c(1,0.5),#标签位置
plot.title = element_text(
face = 'bold', hjust = 0.5,vjust = 1, size = 10, margin = margin(t = 45, b = 20),color = 'grey2'
),#title设定
plot.subtitle = element_text(
face = 'plain', hjust = 0.5, size = 13, margin = margin(t = 5, b = 3)),#subtitle设定
plot.caption = element_text(
face = 'plain', color = 'gray2', size = 18, hjust = 0.5,
margin = margin(b = 20)
)#caption说明文字设定
)+
xlim(-6,6)+
ylim(-6.4,6.4)
ggsave(
'Exposome2.png',
width = 16, height = 16, dpi = 300
)
View(layout)
ggraph(layout) +
geom_edge_diagonal(
aes(edge_color = edge$Regulate, show.legend = TRUE),
edge_width =0.35,
alpha =0.35
) +
geom_node_point(
aes(color = type,show.legend = TRUE),
alpha=0.15,
size = 1/(node$level+1)*60+5)+
scale_edge_color_manual(values = edge_Regulate_color,
guide = guide_legend(title = "Connection",
title.theme = element_text(
size = 18,
face="italic",
colour = "grey1"),
label.theme = element_text(
size = 18,
colour = "grey1",
face="italic")))+#根据top_language_colors确定颜色
scale_color_manual(values = node_type_color,
guide = guide_legend(title = "type",
title.theme = element_text(
size = 18,
face="italic",
colour = "grey1"),
label.theme = element_text(
size = 18,
colour = "grey1",
face="italic")))+#根据top_language_colors确定颜色) +#根据top_language_colors确定颜色
scale_size_area(max_size = 2) +#缩放半径
#外圈标签
geom_node_text(
aes(
x = 1.0175 * x,#文字的横坐标
y = 1.0175 * y,#文字的纵坐标
color= type,
label = name,#文字的内容
angle = -((-node_angle(x, y) + 90) %% 180) + 90,#%%表示整除后返回余数,node_angle根据横纵坐标计算角度
filter =(level==4) #为外圈添加标签
),
size = 4, hjust = 'outward', family = 'Oswald',fontface="italic"
) +
#原点标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
filter = (level==0)#为编程语言添加文字标签
),
size = 4, hjust = 0,vjust=0, family = 'italic', angle=0
) +
#内圈标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
angle = -((-node_angle(x, y) + 90) %% 181) + 90,
filter = (level==1)#为编程语言添加文字标签
),
size = 4, hjust = 'outward', family = 'italic', vjust=0
) +
#中圈标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
angle = -((-node_angle(x, y) + 90) %% 180) + 90,
filter = (level==2)#为编程语言添加文字标签
),
size = 4, hjust = 'outward',
) +
#上层标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
filter = (level==3)#为编程语言添加文字标签
),
size = 4, hjust = 0, family = 'Oswald',vjust=0, family = 'Oswald',
angle = 25
) +
#下层标签
geom_node_text(
aes(
x = x,
y = y,
color =type,show.legend=FALSE,
label = name,
filter = (level==5)#为编程语言添加文字标签
),
size = 4, hjust = 0.5, family = 'Oswald', vjust =0.9,
angle = 25
) +
coord_fixed() +#图形伸缩变换
labs(
title = '',
subtitle = '',
caption = 'Early life pesticide exposome, Gut microbiome, and metabolism'
) +#添加标题、副标题、说明文字
theme(
legend.title.align = 0,#legend左对齐
legend.text.align =0,#legend text左对齐
legend.spacing.x = unit(0.1,"cm"),#图例各个元素距离
legend.spacing.y = unit(0.1,"cm"),
panel.background = element_blank(),#delete background.
panel.grid = element_blank(),
axis.text = element_blank(),
axis.ticks = element_blank(),
axis.title = element_blank()
)+
theme(
text = element_text(family = 'Oswald'),
legend.position = c(1,0.5),#标签位置
plot.title = element_text(
face = 'bold', hjust = 0.5,vjust = 1, size = 10, margin = margin(t = 45, b = 20),color = 'grey2'
),#title设定
plot.subtitle = element_text(
face = 'plain', hjust = 0.5, size = 13, margin = margin(t = 5, b = 3)),#subtitle设定
plot.caption = element_text(
face = 'plain', color = 'gray2', size = 18, hjust = 0.5,
margin = margin(b = 20)
)#caption说明文字设定
)+
xlim(-6,6)+
ylim(-6.4,6.4)
ggsave(
'Exposome2.png',
width = 16, height = 16, dpi = 300
)
usethis::use_package("dplyr")
usethis::use_package("rstatix")
#make package
devtools::build()
#cite other package from CRAN
#check thepackage
devtools::check()
#enclosure package: 1.build->document 2.build->install package
#Done : install successfully
library(meTool)
microdiff
microdiff("data/microbiome.csv")
usethis::use_package("rstatix")
microdiff("data/microbiome.csv")
#write annotations
devtools::document()
microdiff("data/microbiome.csv")
#make package
devtools::build()
metabo<-read.csv("data/metabolite.csv", check.names = FALSE, header = 1)
View(metabo)
micro<-read.csv("data/microiome.csv", check.names = FALSE, header=1)
micro<-read.csv("data/microbiome.csv", check.names = FALSE, header=1)
View(micro)
metabo<-read.csv("data/metabolite.csv", check.names = FALSE, header = 1)
micro<-read.csv("data/microbiome.csv", check.names = FALSE, header=1)
metabo1<-metabo[,1:(dim(mtabo)[2]-1)]
metabo1<-metabo[,1:(dim(mtabo)[2]-1)]
metabo1<-metabo[,1:(dim(metabo)[2]-1)]
micro1<-micro[,1:(dim(micro)[2]-1)]
View(micro)
View(micro1)
View(metabo1)
microdiff
library(meTool)
microdiff
pcaplot
microdiff()
microdiff<-function(dataname){
mi<-read.csv(dataname,check.names = FALSE,row.names = 1)
mic<-as.tibble(mi)%>%
pivot_longer(cols = 1 : (dim(mi)[2]-1), names_to = "variable", values_to = "Abundance") %>%#改格式
group_by(variable) %>%
kruskal_test(Abundance~Group) %>%#批量计算kw检验p值
filter(p<0.05)%>%
select(variable,p)
micro<-as.data.frame(mic)
mylist<-NULL
mylist1<-NULL
for (i in 1:(dim(mi)[2]-1)) {
for (j in 1:dim(micro)[1]) {
if(colnames(mi)[i]==micro[j,1]){
mylist<-append(mylist,list(mi[,i]))
mylist1<-append(mylist1,list(colnames(mi)[i]))
}
}
}
names<-as.data.frame(mylist1)
abundance<-as.data.frame(mylist)
colnames(abundance)<-names
rownames(abundance)<-row.names(mi)
all<-cbind(abundance,Group=mi$Group)
return(all)
#'
#'
#' @param dataname  The file name of microbiome abundance
#' @import tidyverse
#' @import rstatix
#' @return Differential bacteria
#' @export
#'
#' @examples #a<-microdiff("data/microbiome.csv")
#'
microdiff<-function(dataname){
mi<-read.csv(dataname,check.names = FALSE,row.names = 1)
mic<-as.tibble(mi)%>%
pivot_longer(cols = 1 : (dim(mi)[2]-1), names_to = "variable", values_to = "Abundance") %>%#改格式
group_by(variable) %>%
kruskal_test(Abundance~Group) %>%#批量计算kw检验p值
filter(p<0.05)%>%
select(variable,p)
micro<-as.data.frame(mic)
mylist<-NULL
mylist1<-NULL
for (i in 1:(dim(mi)[2]-1)) {
for (j in 1:dim(micro)[1]) {
if(colnames(mi)[i]==micro[j,1]){
mylist<-append(mylist,list(mi[,i]))
mylist1<-append(mylist1,list(colnames(mi)[i]))
}
}
}
names<-as.data.frame(mylist1)
abundance<-as.data.frame(mylist)
colnames(abundance)<-names
rownames(abundance)<-row.names(mi)
all<-cbind(abundance,Group=mi$Group)
return(all)
}
stop()
