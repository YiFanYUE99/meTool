colnames(micro)<-miname
micro<-as.data.frame(scale(micro,center = T,scale = T))#中心化且归一化数据
micro$Group=mic$Group
#如果两个变量都是代谢物
if(any(colnames(met) == sub[1], na.rm = TRUE)&any(colnames(met) == sub[2], na.rm = TRUE)){
indices1 <- which(colnames(met) == sub[1], arr.ind = TRUE)
indices2 <- which(colnames(met) == sub[2], arr.ind = TRUE)
plot2d<-as.data.frame(cbind(met[,indices1],met[,indices2]))
colnames(plot2d)<-c(colnames(met)[indices1],colnames(met)[indices2])
plot2d$Group<-met$Group
rownames(plot2d)<-rownames(met)
#作图
xlab<-paste0("Metabolites",": ",sub[1])
ylab<-paste0("Metabolites",": ",sub[2])
p3<-ggplot(data = plot2d,aes(x=plot2d[,1],y=plot2d[,2],color=Group))+
stat_ellipse(segments =  nlevels(plot2d$Group)+1,aes(fill=Group),#添加置信区间;以Group为标准
type = "t",level = 0.95, na.rm = FALSE, geom ="polygon",alpha=0.25,color=NA, show.legend=F,inherit.aes = T)+
geom_point()+labs(x=xlab,y=ylab,color="")+
guides(fill="none")+
scale_fill_manual(values = color)+ #为三个种类手动添加颜色
scale_colour_manual(values = color)+
theme(axis.title.y = element_text(size = 12, family = "serif",face="bold"),
axis.title.x = element_text(size = 12, family = "serif",face="bold"),
axis.text.x = element_text(size = 10,  family = "serif",face="bold"),
axis.text.y = element_text(size = 10,  family = "serif",face="bold"),
panel.background = element_rect(colour = "#FFF5CC",fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3
p1 <- ggplot(data=plot2d, aes(x = plot2d[,1],fill = Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())
p1
p2 <- ggplot(data=plot2d, aes(x = plot2d[,2],fill =Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())+#去掉背景
coord_flip()
p2
plot_layout(ncol = 2,nrow = 3)
p <-p3%>%
insert_top(p1,height=0.25)%>%
insert_right(p2,width=0.25)%>%
as.ggplot()
p
}else{
indices1 <- which(colnames(micro) == sub[1], arr.ind = TRUE)
indices2 <- which(colnames(micro) == sub[2], arr.ind = TRUE)
plot2d<-as.data.frame(cbind(micro[,indices1],micro[,indices2]))
colnames(plot2d)<-c(colnames(micro)[indices1],colnames(micro)[indices2])
plot2d$Group<-micro$Group
rownames(plot2d)<-rownames(met)
#作图
xlab<-sub[1]
ylab<-sub[2]
p3<-ggplot(data = plot2d,aes(x=plot2d[,1],y=plot2d[,2],color=Group))+
stat_ellipse(segments =  nlevels(plot2d$Group)+1,aes(fill=Group),#添加置信区间;以Group为标准
type = "t",level = 0.95, na.rm = FALSE, geom ="polygon",alpha=0.25,color=NA, show.legend=F,inherit.aes = T)+
geom_point()+labs(x=xlab,y=ylab,color="")+
guides(fill="none")+
scale_fill_manual(values = color)+ #为三个种类手动添加颜色
scale_colour_manual(values = color)+
theme(axis.title.y = element_text(size = 12, family = "serif",face="bold"),
axis.title.x = element_text(size = 12, family = "serif",face="bold"),
axis.text.x = element_text(size = 10,  family = "serif",face="bold"),
axis.text.y = element_text(size = 10,  family = "serif",face="bold"),
panel.background = element_rect(colour = "#FFF5CC",fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3
p1 <- ggplot(data=plot2d, aes(x = plot2d[,1],fill = Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())
p1
p2 <- ggplot(data=plot2d, aes(x = plot2d[,2],fill =Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())+#去掉背景
coord_flip()
p2
plot_layout(ncol = 2,nrow = 3)
p <-p3%>%
insert_top(p1,height=0.25)%>%
insert_right(p2,width=0.25)%>%
as.ggplot()
p
}
}
p<-p+plot_annotation(title = "Combined Scatter Plots")
p
p<-p+plot_annotation(title = "Metabolites")
p<-p+plot_annotation(title = "Metabolites",hjust=0.5)
metmicro2dplot<-function(metabolites,microbiome,sub=c("glutamate","urea"),color=c("CK"="violet","L"="lightblue2","H"="lightgreen")){
meta<-read.table(metabolites,header=T,row.names=1,check.names = F,sep=",")
met<-meta[,-dim(meta)[2]]
met<-as.data.frame(scale(met,center = T,scale = T))#中心化且归一化数据
met$Group<-as.factor(meta$Group)
mic<-read.table(microbiome,header=T,row.names=1,check.names = F,sep=",")
micro<-mic[,-dim(mic)[2]]
miname<-as.data.frame(matrix(ncol=1,nrow=1))
for (k in 1:dim(micro)[2]) {
# 找到最后一个逗号的位置
microname <- max(gregexpr(";", colnames(micro)[k])[[1]])
# 提取最后一个逗号后的字符
extracted <- substr(colnames(micro)[k],
start = microname + 1,
stop = nchar(colnames(micro)[k]))
miname<-rbind(miname,extracted)
}
miname<-miname[-1,]
colnames(micro)<-miname
micro<-as.data.frame(scale(micro,center = T,scale = T))#中心化且归一化数据
micro$Group=mic$Group
#如果两个变量都是代谢物
if(any(colnames(met) == sub[1], na.rm = TRUE)&any(colnames(met) == sub[2], na.rm = TRUE)){
indices1 <- which(colnames(met) == sub[1], arr.ind = TRUE)
indices2 <- which(colnames(met) == sub[2], arr.ind = TRUE)
plot2d<-as.data.frame(cbind(met[,indices1],met[,indices2]))
colnames(plot2d)<-c(colnames(met)[indices1],colnames(met)[indices2])
plot2d$Group<-met$Group
rownames(plot2d)<-rownames(met)
#作图
xlab<-sub[1]
ylab<-sub[2]
p3<-ggplot(data = plot2d,aes(x=plot2d[,1],y=plot2d[,2],color=Group))+
stat_ellipse(segments =  nlevels(plot2d$Group)+1,aes(fill=Group),#添加置信区间;以Group为标准
type = "t",level = 0.95, na.rm = FALSE, geom ="polygon",alpha=0.25,color=NA, show.legend=F,inherit.aes = T)+
geom_point()+labs(x=xlab,y=ylab,color="")+
guides(fill="none")+
scale_fill_manual(values = color)+ #为三个种类手动添加颜色
scale_colour_manual(values = color)+
theme(axis.title.y = element_text(size = 12, family = "serif",face="bold"),
axis.title.x = element_text(size = 12, family = "serif",face="bold"),
axis.text.x = element_text(size = 10,  family = "serif",face="bold"),
axis.text.y = element_text(size = 10,  family = "serif",face="bold"),
panel.background = element_rect(colour = "#FFF5CC",fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3
p1 <- ggplot(data=plot2d, aes(x = plot2d[,1],fill = Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())
p1
p2 <- ggplot(data=plot2d, aes(x = plot2d[,2],fill =Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())+#去掉背景
coord_flip()
p2
plot_layout(ncol = 2,nrow = 3)
p <-p3%>%
insert_top(p1,height=0.25)%>%
insert_right(p2,width=0.25)%>%
as.ggplot()
p<-p+plot_annotation(title = "Metabolites")
}else{
indices1 <- which(colnames(micro) == sub[1], arr.ind = TRUE)
indices2 <- which(colnames(micro) == sub[2], arr.ind = TRUE)
plot2d<-as.data.frame(cbind(micro[,indices1],micro[,indices2]))
colnames(plot2d)<-c(colnames(micro)[indices1],colnames(micro)[indices2])
plot2d$Group<-micro$Group
rownames(plot2d)<-rownames(met)
#作图
xlab<-sub[1]
ylab<-sub[2]
p3<-ggplot(data = plot2d,aes(x=plot2d[,1],y=plot2d[,2],color=Group))+
stat_ellipse(segments =  nlevels(plot2d$Group)+1,aes(fill=Group),#添加置信区间;以Group为标准
type = "t",level = 0.95, na.rm = FALSE, geom ="polygon",alpha=0.25,color=NA, show.legend=F,inherit.aes = T)+
geom_point()+labs(x=xlab,y=ylab,color="")+
guides(fill="none")+
scale_fill_manual(values = color)+ #为三个种类手动添加颜色
scale_colour_manual(values = color)+
theme(axis.title.y = element_text(size = 12, family = "serif",face="bold"),
axis.title.x = element_text(size = 12, family = "serif",face="bold"),
axis.text.x = element_text(size = 10,  family = "serif",face="bold"),
axis.text.y = element_text(size = 10,  family = "serif",face="bold"),
panel.background = element_rect(colour = "#FFF5CC",fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3
p1 <- ggplot(data=plot2d, aes(x = plot2d[,1],fill = Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())
p1
p2 <- ggplot(data=plot2d, aes(x = plot2d[,2],fill =Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())+#去掉背景
coord_flip()
p2
plot_layout(ncol = 2,nrow = 3)
p <-p3%>%
insert_top(p1,height=0.25)%>%
insert_right(p2,width=0.25)%>%
as.ggplot()
p<-p+plot_annotation(title = "Microbiome")
}
}
metabolites<-"data/metabolitesg.csv"
microbiome<-"data/microbiome.csv"
sub=c("glutamate","urea")
color<-c("CK"="violet","L"="lightblue2","H"="lightgreen")
metamicro2dplot(metabolites,microbiome,sub,color)
metmicro2dplot<-function(metabolites,microbiome,sub=c("glutamate","urea"),color=c("CK"="violet","L"="lightblue2","H"="lightgreen")){
meta<-read.table(metabolites,header=T,row.names=1,check.names = F,sep=",")
met<-meta[,-dim(meta)[2]]
met<-as.data.frame(scale(met,center = T,scale = T))#中心化且归一化数据
met$Group<-as.factor(meta$Group)
mic<-read.table(microbiome,header=T,row.names=1,check.names = F,sep=",")
micro<-mic[,-dim(mic)[2]]
miname<-as.data.frame(matrix(ncol=1,nrow=1))
for (k in 1:dim(micro)[2]) {
# 找到最后一个逗号的位置
microname <- max(gregexpr(";", colnames(micro)[k])[[1]])
# 提取最后一个逗号后的字符
extracted <- substr(colnames(micro)[k],
start = microname + 1,
stop = nchar(colnames(micro)[k]))
miname<-rbind(miname,extracted)
}
miname<-miname[-1,]
colnames(micro)<-miname
micro<-as.data.frame(scale(micro,center = T,scale = T))#中心化且归一化数据
micro$Group=mic$Group
#如果两个变量都是代谢物
if(any(colnames(met) == sub[1], na.rm = TRUE)&any(colnames(met) == sub[2], na.rm = TRUE)){
indices1 <- which(colnames(met) == sub[1], arr.ind = TRUE)
indices2 <- which(colnames(met) == sub[2], arr.ind = TRUE)
plot2d<-as.data.frame(cbind(met[,indices1],met[,indices2]))
colnames(plot2d)<-c(colnames(met)[indices1],colnames(met)[indices2])
plot2d$Group<-met$Group
rownames(plot2d)<-rownames(met)
#作图
xlab<-sub[1]
ylab<-sub[2]
p3<-ggplot(data = plot2d,aes(x=plot2d[,1],y=plot2d[,2],color=Group))+
stat_ellipse(segments =  nlevels(plot2d$Group)+1,aes(fill=Group),#添加置信区间;以Group为标准
type = "t",level = 0.95, na.rm = FALSE, geom ="polygon",alpha=0.25,color=NA, show.legend=F,inherit.aes = T)+
geom_point()+labs(x=xlab,y=ylab,color="")+
guides(fill="none")+
scale_fill_manual(values = color)+ #为三个种类手动添加颜色
scale_colour_manual(values = color)+
theme(axis.title.y = element_text(size = 12, family = "serif",face="bold"),
axis.title.x = element_text(size = 12, family = "serif",face="bold"),
axis.text.x = element_text(size = 10,  family = "serif",face="bold"),
axis.text.y = element_text(size = 10,  family = "serif",face="bold"),
panel.background = element_rect(colour = "#FFF5CC",fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3
p1 <- ggplot(data=plot2d, aes(x = plot2d[,1],fill = Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())
p1
p2 <- ggplot(data=plot2d, aes(x = plot2d[,2],fill =Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())+#去掉背景
coord_flip()
p2
plot_layout(ncol = 2,nrow = 3)
p <-p3%>%
insert_top(p1,height=0.25)%>%
insert_right(p2,width=0.25)%>%
as.ggplot()
p<-p+plot_annotation(title = "Metabolites")
}else{
indices1 <- which(colnames(micro) == sub[1], arr.ind = TRUE)
indices2 <- which(colnames(micro) == sub[2], arr.ind = TRUE)
plot2d<-as.data.frame(cbind(micro[,indices1],micro[,indices2]))
colnames(plot2d)<-c(colnames(micro)[indices1],colnames(micro)[indices2])
plot2d$Group<-micro$Group
rownames(plot2d)<-rownames(met)
#作图
xlab<-sub[1]
ylab<-sub[2]
p3<-ggplot(data = plot2d,aes(x=plot2d[,1],y=plot2d[,2],color=Group))+
stat_ellipse(segments =  nlevels(plot2d$Group)+1,aes(fill=Group),#添加置信区间;以Group为标准
type = "t",level = 0.95, na.rm = FALSE, geom ="polygon",alpha=0.25,color=NA, show.legend=F,inherit.aes = T)+
geom_point()+labs(x=xlab,y=ylab,color="")+
guides(fill="none")+
scale_fill_manual(values = color)+ #为三个种类手动添加颜色
scale_colour_manual(values = color)+
theme(axis.title.y = element_text(size = 12, family = "serif",face="bold"),
axis.title.x = element_text(size = 12, family = "serif",face="bold"),
axis.text.x = element_text(size = 10,  family = "serif",face="bold"),
axis.text.y = element_text(size = 10,  family = "serif",face="bold"),
panel.background = element_rect(colour = "#FFF5CC",fill = NA),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
p3
p1 <- ggplot(data=plot2d, aes(x = plot2d[,1],fill = Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())
p1
p2 <- ggplot(data=plot2d, aes(x = plot2d[,2],fill =Group)) +
geom_density(color="transparent",alpha = 0.25, show.legend = FALSE) +
guides(fill="none")+
labs(title = "Density Plot", x = "X", y = "Density")+
scale_fill_manual(values = color)+ #为2个种类手动添加颜色
scale_colour_manual(values = color)+
scale_y_continuous(expand = expansion(mult = c(0, 0.05))) +
labs(x=NULL,y=NULL)+
theme(plot.title = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),#去掉横坐标刻度
axis.text.x = element_text(size = 8, family = "serif", face="italic"),
panel.background = element_blank())+#去掉背景
coord_flip()
p2
plot_layout(ncol = 2,nrow = 3)
p <-p3%>%
insert_top(p1,height=0.25)%>%
insert_right(p2,width=0.25)%>%
as.ggplot()
p<-p+plot_annotation(title = "Microbiome")
}
return(p)
}
p<-metmicro2dplot(metabolites,microbiome,sub,color)
p
sub2=c("g_Oscillospira","g_Lactobacillus")
p<-metmicro2dplot(metabolites,microbiome,sub2,color)
#' @param dataname  The file name of microbiome abundance
#' @param comgr the compared groups
#' @import tidyverse
#' @import rstatix
#' @return Differential bacteria
#' @export
#'
#' @examples
#' #a<-microdiff("data/microbiome.csv",comgr=c("CK","L"))
#'
microdiff<-function(dataname,comgr=c("CK","L")){
mi<-read.csv(dataname,check.names = FALSE,row.names = 1)
#简化菌群名称
micro<-mi[,1:(dim(mi)[2]-1)]
miname<-as.data.frame(matrix(ncol=1,nrow=1))
for (k in 1:dim(micro)[2]) {
# 找到最后一个逗号的位置
microname <- max(gregexpr(";", colnames(micro)[k])[[1]])
# 提取最后一个逗号后的字符
extracted <- substr(colnames(micro)[k],
start = microname + 1,
stop = nchar(colnames(micro)[k]))
miname<-rbind(miname,extracted)
}
miname<-miname[-1,]
colnames(micro)<-miname
micro$Group<-mi$Group
micro<-micro[micro$Group==comgr[1]|micro$Group==comgr[2],-dim(micro)[2]]
q2 <- c(rep(0, sum(mi$Group==comgr[1])), rep(1, sum(mi$Group==comgr[2])))
sel<-matrix(NA, nrow = ncol(micro), ncol = 2)
sel<-as.data.frame(sel)
for (i in 1:dim(micro)[2]) {
q1 <- micro[, i]
sel[i,1]<-colnames(micro)[i]
sel[i,2] <- t.test(q1 ~ q2)$p.value
}
#删除含nan的行
sel<-sel[complete.cases(sel),]
colnames(sel)<-c("Microbiome","p-value")
sel<-sel[sel$`p-value`<0.05,]
sel<-sel[order(sel$`p-value`),]#升序排列
return(sel)
}
a<-microdiff("data/microbiome.csv",comgr=c("CK","L"))
View(a)
sub2=c("g__Adlercreutzia","g__Oscillospira")
p<-metmicro2dplot(metabolites,microbiome,sub2,color)
p
sub2=c("p__Actinobacteria","g__Oscillospira")
p<-metmicro2dplot(metabolites,microbiome,sub2,color)
p
sub2=c("c__Coriobacteriia","o__Coriobacteriales")
p<-metmicro2dplot(metabolites,microbiome,sub2,color)
p
sub2=c("c__Coriobacteriia","f__Lactobacillaceae")
p<-metmicro2dplot(metabolites,microbiome,sub2,color)
p
#二维图
metabolites<-"data/metabolitesg.csv"
microbiome<-"data/microbiome.csv"
sub=c("glutamate","urea")
sub2=c("c__Coriobacteriia","f__Lactobacillaceae")
color<-c("CK"="violet","L"="lightblue2","H"="lightgreen")
p1<-metmicro2dplot(metabolites,microbiome,sub,color)
p2<-metmicro2dplot(metabolites,microbiome,sub2,color)
p1
ggsave("pic/glutamate_urea.png", plot = p1, width = 20, height = 20,dpi = 300,units = "cm")
View(a)
b<-metadiff("data/microbiome.csv",comgr = c("CK","L"))
View(b)
b<-microdiff("data/microbiome.csv",comgr = c("CK","L"))
sub2=c("g__Adlercreutzia","f__Lactobacillaceae")
p2<-metmicro2dplot(metabolites,microbiome,sub2,color)
p2
sub2=c("g__Adlercreutzia","g__Lactobacillus")
p2<-metmicro2dplot(metabolites,microbiome,sub2,color)
ggsave("pic/microbiome2dplot.png", plot = p2, width = 20, height = 20,dpi = 300,units = "cm")
devtools::build()
#write annotations
devtools::document()
devtools::build()
#cite other package from CRAN
#check thepackage
devtools::check()
