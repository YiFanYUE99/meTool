axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
bg<-c("#E6C8FF","#F0E0FF")
fe<-c("#4682B4","#ADD8E6")
gm<-c("#FFE0E0","#FFE0E6")
pointsize<-0.4
textsize<-3
linesize<-3
titlesize<-20
xtisize<-14
ytisize<-14
xtesize<-14
ytesize<-10
ggplot(tables2, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=fe[2],low=fe[1])+
scale_color_continuous(high=fe[1],low=fe[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(tables2$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
bg<-c("#F0E0FF"，"#E6C8FF")
bg<-c("#F0E0FF","#E6C8FF")
ggplot(tables2, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=fe[2],low=fe[1])+
scale_color_continuous(high=fe[1],low=fe[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(tables2$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
bg<-c("#E6C8FF","#F0E0FF")
bg<-c("#E6C8FF","#F0E0FF")
fe<-c("#86FF86","#E0FFE0")
gm<-c("#FFE0E0","#FFE0E6")
pointsize<-0.4
textsize<-3
linesize<-3
titlesize<-20
xtisize<-14
ytisize<-14
xtesize<-14
ytesize<-10
ggplot(tables2, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=fe[2],low=fe[1])+
scale_color_continuous(high=fe[1],low=fe[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(tables2$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
tables<-metadiff(input,comgr)
tables2<-metadiff_all(input,comgr)
vipp_plot<-function(table,G=c("CK","H")){
title<-paste0(G[1]," ",G[2]," ","VIP & p value")
bg<-c("#E6C8FF","#F0E0FF")
fe<-c("#86FF86","#E0FFE0")
gm<-c("#FFE0E0","#FFE0E6")
pointsize<-0.4
textsize<-3
linesize<-3
titlesize<-20
xtisize<-14
ytisize<-14
xtesize<-14
ytesize<-10
ggplot(table, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=fe[2],low=fe[1])+
scale_color_continuous(high=fe[1],low=fe[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(table$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
}
vipp_plot(tables,G=comgr)
vipp_plot(tables2,G=comgr)
vipp1<-vipp_plot(tables,G=comgr)
vipp2<-vipp_plot(tables2,G=comgr)
vipp<-vipp1+vipp2
vipp
ggsave(plot = vipp,"pic/vip_pvalues.png",width = 40,height = 30,dpi = 300,units = "cm")
vipp_plot<-function(table,G=c("CK","H")){
title<-paste0(G[1]," ",G[2]," ","VIP & p value")
bg<-c("#E6C8FF","#F0E0FF")
fe<-c("#86FF86","#E0FFE0")
gm<-c("#FFE0E0","#FFE0E6")
pointsize<-0.1
textsize<-3
linesize<-4
titlesize<-20
xtisize<-14
ytisize<-14
xtesize<-14
ytesize<-10
ggplot(table, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=fe[2],low=fe[1])+
scale_color_continuous(high=fe[1],low=fe[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(table$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
}
vipp1<-vipp_plot(tables,G=comgr)
vipp2<-vipp_plot(tables2,G=comgr)
vipp<-vipp1+vipp2
vipp
ggsave(plot = vipp,"pic/vip_pvalues.png",width = 40,height = 30,dpi = 300,units = "cm")
vipp_plot<-function(table,G=c("CK","H")){
title<-paste0(G[1]," ",G[2]," ","VIP & p value")
bg<-c("#E6C8FF","#F0E0FF")
fe<-c("#86FF86","#E0FFE0")
gm<-c("#FFE0E0","#FFE0E6")
pointsize<-0.01
textsize<-3
linesize<-4.5
titlesize<-20
xtisize<-14
ytisize<-14
xtesize<-14
ytesize<-10
ggplot(table, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=fe[2],low=fe[1])+
scale_color_continuous(high=fe[1],low=fe[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(table$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
}
vipp1<-vipp_plot(tables,G=comgr)
vipp2<-vipp_plot(tables2,G=comgr)
vipp<-vipp1+vipp2
vipp
ggsave(plot = vipp,"pic/vip_pvalues.png",width = 40,height = 30,dpi = 300,units = "cm")
vipp_plot<-function(table,G=c("CK","H")){
title<-paste0(G[1]," ",G[2]," ","VIP & p value")
bg<-c("#E6C8FF","#F0E0FF")
fe<-c("#86FF86","#E0FFE0")
gm<-c("#FFE0E0","#FFE0E6")
pointsize<-0.1
textsize<-3
linesize<-3.5
titlesize<-20
xtisize<-14
ytisize<-14
xtesize<-14
ytesize<-10
ggplot(table, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=fe[2],low=fe[1])+
scale_color_continuous(high=fe[1],low=fe[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(table$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
}
vipp1<-vipp_plot(tables,G=comgr)
vipp2<-vipp_plot(tables2,G=comgr)
vipp<-vipp1+vipp2
vipp
ggsave(plot = vipp,"pic/vip_pvalues.png",width = 20,height = 16,dpi = 300,units = "cm")
ggsave(plot = vipp,"pic/vip_pvalues.png",width = 20,height = 14,dpi = 300,units = "cm")
vipp_plot<-function(table,G=c("CK","H")){
title<-paste0(G[1]," ",G[2]," ","VIP & p value")
bg<-c("#E6C8FF","#F0E0FF")
fe<-c("#86FF86","#E0FFE0")
gm<-c("#FFE0E0","#FFE0E6")
pointsize<-0.1
textsize<-3
linesize<-3.5
titlesize<-15
xtisize<-14
ytisize<-14
xtesize<-10
ytesize<-10
ggplot(table, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=fe[2],low=fe[1])+
scale_color_continuous(high=fe[1],low=fe[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(table$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
}
vipp1<-vipp_plot(tables,G=comgr)
vipp2<-vipp_plot(tables2,G=comgr)
vipp<-vipp1+vipp2
vipp
ggsave(plot = vipp,"pic/vip_pvalues.png",width = 20,height = 14,dpi = 300,units = "cm")
textsize<-2
vipp_plot<-function(table,G=c("CK","H")){
title<-paste0(G[1]," ",G[2]," ","VIP & p value")
bg<-c("#E6C8FF","#F0E0FF")
fe<-c("#86FF86","#E0FFE0")
gm<-c("#FFE0E0","#FFE0E6")
pointsize<-0.1
textsize<-2
linesize<-3.5
titlesize<-15
xtisize<-14
ytisize<-14
xtesize<-10
ytesize<-10
ggplot(table, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=fe[2],low=fe[1])+
scale_color_continuous(high=fe[1],low=fe[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(table$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
}
vipp1<-vipp_plot(tables,G=comgr)
vipp2<-vipp_plot(tables2,G=comgr)
vipp<-vipp1+vipp2
vipp
comgr2=c("CK","L")
tables<-metadiff(input,comgr)#筛选
tables2<-metadiff_all(input,comgr2)#只计算值，不筛选
vipp1<-vipp_plot(tables,G=comgr)
vipp2<-vipp_plot(tables2,G=comgr2)
vipp<-vipp1+vipp2
vipp
ggsave(plot = vipp,"pic/vip_pvalues.png",width = 25,height = 19,dpi = 300,units = "cm")
vipp_plot<-function(table,G=c("CK","H"),color=c("#86FF86","#E0FFE0")){
title<-paste0(G[1]," ",G[2]," ","VIP & p value")
bg<-c("#E6C8FF","#F0E0FF")
gm<-c("#FFE0E0","#FFE0E6")
pointsize<-0.1
textsize<-2
linesize<-3.5
titlesize<-15
xtisize<-14
ytisize<-14
xtesize<-10
ytesize<-10
ggplot(table, aes(x = Metabolites, y = vip)) +
geom_segment(aes(x= Metabolites, y= vip, color=vip,
xend=Metabolites, yend=1),
linewidth=linesize,
linetype=1)+#使用reorder()排序变量
geom_point(aes(fill=log10(`p-value`), size=-log10(`p-value`)/pointsize), pch = 21, color=bg[1]) +
geom_text(aes(label =sprintf("%.4f",`p-value`)),
color = "black",
size = textsize,
family = "mono",
fontface="bold")+
scale_fill_continuous(high=color[2],low=color[1])+
scale_color_continuous(high=color[1],low=color[2])+
guides(fill ="none",color="none",size="none",linewidth="none")+
labs(title = title, x = "Meatabolites", y = "vip")+
xlim(rev(table$Metabolites))+#固定横坐标
coord_flip()+
#annotate("text",x=Inf, y=-Inf, label="(A)",hjust=1,vjust=-0.5)+
theme(
text = element_text(family = "mono", size=16),
plot.title = element_text(size = titlesize,hjust = 0.5),#title 大小
axis.title.x = element_text(size = xtisize),#x轴标题
axis.title.y = element_text(size = ytisize),
axis.text.x = element_text(face = "bold", angle = 0, hjust = 1,size = xtesize),#横坐标
axis.text.y = element_text(face = "bold", angle = 25, hjust = 1,size = ytesize),
legend.text = element_text(size = 8),#legend字体大小
legend.title = element_text(size = 8), #设置legend标签字体大小
panel.grid.major = element_line(color = gm[1]),  # 主要网格线颜色为红色
panel.grid.minor = element_line(color = gm[2]),  # 次要网格线颜色为蓝色
panel.background = element_rect(fill = bg[2]),  # 去除背景
panel.border = element_rect(color = bg[1], fill = NA)#保留边框
)
}
vipp1<-vipp_plot(tables,G=comgr,color=c("#86FF86","#E0FFE0"))
vipp2<-vipp_plot(tables2,G=comgr2,color=c("#86FFFF","#E0FFFF"))
vipp<-vipp1+vipp2
vipp
ggsave(plot = vipp,"pic/vip_pvalues.png",width = 25,height = 19,dpi = 300,units = "cm")
ggsave(plot = vipp,"pic/vip_pvalues.png",width = 25,height = 19,dpi = 300,units = "cm")
#write annotations
devtools::document()
rm(list = c("metadiff"))
#write annotations
devtools::document()
rm(list = c("metadiff_all", "vipp_plot"))
#write annotations
devtools::document()
devtools::build()
#cite other package from CRAN
#check thepackage
devtools::check()
